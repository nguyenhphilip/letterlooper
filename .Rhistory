install.packages("emayili")
install.packages("tidyverse")
install.packages("googlesheets4")
library(emayili)
library(googlesheets4)
library(dplyr)
library(lubridate)
# Authenticate (if necessary)
# You might need to run `gs4_auth()` to authenticate your Google account
# gs4_auth()
gs4_auth()
# Read the Google Sheet into a dataframe
sheet_url <- "https://docs.google.com/spreadsheets/d/1CSgKpm5sZSVBukx1Qb6q1WPrht_TuYC3zQQY8X12Kq0/edit?resourcekey=&gid=1383175476#gid=1383175476"
survey_data <- read_sheet(sheet_url)
survey_data
email_username <- Sys.getenv("EMAIL_USERNAME")
email_password <- Sys.getenv("EMAIL_PASSWORD")
email_username
email_password
Sys.getenv("EMAIL_USERNAME")
date_start <- "2024-11-15"
date_end <- "2024-12-16"
install.packages("janitor")
library(janitor)
subject <- stringr::str_glue("Letterlooper {date_start} -> {date_end}")
subject
subj <- stringr::str_glue("Letterlooper: {date_start} -> {date_end}")
survey_data
# Read the Google Sheet into a dataframe
sheet_url <- "https://docs.google.com/spreadsheets/d/1CSgKpm5sZSVBukx1Qb6q1WPrht_TuYC3zQQY8X12Kq0/edit?resourcekey=&gid=1383175476#gid=1383175476"
survey_data <- read_sheet(sheet_url) |> filter()
survey_data <- read_sheet(sheet_url)
library(emayili)
library(googlesheets4)
library(dplyr)
library(lubridate)
library(janitor)
# Read the Google Sheet into a dataframe
sheet_url <- "https://docs.google.com/spreadsheets/d/1CSgKpm5sZSVBukx1Qb6q1WPrht_TuYC3zQQY8X12Kq0/edit?resourcekey=&gid=1383175476#gid=1383175476"
survey_data <- read_sheet(sheet_url)
survey_data
survey_data |>
filter(timestamp >= date_start)
survey_data |>
filter(timestamp > date_start)
survey_data
survey_data |>
filter(timestamp > as_date(date_start))
survey_data |>
filter(Timestamp >= date_start)
survey_data <- survey_data |>
filter(Timestamp >= date_start)
# Loop through each respondent and send an email
for (i in 1:nrow(survey_data)) {
# Extract the responder's email (assuming there's a column named 'Email')
responder_email <- survey_data[i, "Email"]
# Create the email body using the function
email_body <- create_email_body(survey_data[i, ])
# Compose the email
email <- envelope() |>
from("nguy.philip@gmail.com") |>
# uncomment to test
to("nguy.philip@gmail.com") |>
# to(responder_email) |>
subject(subj) |>
html(email_body)
}
# Loop through each respondent and send an email
for (i in 1:nrow(survey_data)) {
# Extract the responder's email (assuming there's a column named 'Email')
responder_email <- survey_data[i, "Email Address"]
# Create the email body using the function
email_body <- create_email_body(survey_data[i, ])
# Compose the email
email <- envelope() |>
from("nguy.philip@gmail.com") |>
# uncomment to test
to("nguy.philip@gmail.com") |>
# to(responder_email) |>
subject(subj) |>
html(email_body)
}
survey_data <- read_sheet(sheet_url)
email_username <- Sys.getenv("EMAIL_USERNAME")
email_password <- Sys.getenv("EMAIL_PASSWORD")
create_email_body <- function(row_data) {
email_body <- ""
for (col in names(row_data)) {
email_body <- paste0(email_body, "<h3>", col, "</h3><p>", row_data[[col]], "</p>")
}
return(email_body)
}
smtp <- server(
host = "smtp.gmail.com",
port = 465,
username = email_username,
password = email_password
)
date_start <- "2024-11-15"
date_end <- "2024-12-16"
subj <- stringr::str_glue("Letterlooper: {date_start} -> {date_end}")
survey_data <- survey_data |>
filter(Timestamp >= date_start)
# Loop through each respondent and send an email
for (i in 1:nrow(survey_data)) {
# Extract the responder's email (assuming there's a column named 'Email')
responder_email <- survey_data[i, "Email Address"]
# Create the email body using the function
email_body <- create_email_body(survey_data[i, ])
# Compose the email
email <- envelope() |>
from("nguy.philip@gmail.com") |>
# uncomment to test
to("nguy.philip@gmail.com") |>
# to(responder_email) |>
subject(subj) |>
html(email_body)
}
# Send the email
smtp(email)
email_password <- Sys.getenv("APP_PASSWORD")
email_password
email_username <- Sys.getenv("EMAIL_USERNAME")
app_password <- Sys.getenv("APP_PASSWORD")
app_password
